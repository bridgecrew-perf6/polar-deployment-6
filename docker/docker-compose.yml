version: '3.8'

services:

# Applications

  config-service:
    image: ernestoacostacuba/config-service:0.0.1-SNAPSHOT
    container_name: config-service
    ports:
      - '8888:8888'
    environment:
      BPL_JVM_THREAD_COUNT: 50
      BPL_DEBUG_ENABLED: 'true'
      BPL_DEBUG_PORT: 9888
    networks:
      - catalog-network

  catalog-service:
    image: ernestoacostacuba/catalog-service:0.0.1-SNAPSHOT
    container_name: catalog-service
    depends_on:
      polar-mysql:
        condition: service_healthy  
    ports:
      - '8001:8001'
      - '9001:9001'
    environment:
      BPL_DEBUG_ENABLED: 'true' 
      BPL_DEBUG_PORT: 8001 
      BPL_JVM_THREAD_COUNT: 50
      SPRING_DATASOURCE_URL: jdbc:mysql://polar-mysql:3306/polardb_catalog?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      DB_USER: 'catalog_user'
      DB_PASSWORD: 'Y2F0YWxvZ191c2Vy'
      MYSQL_ROOT_PASSWORD: 'password'
      DB_HOST: 'polar-mysql'
      DB_NAME: ':polardb_catalog'

    networks:
      - catalog-network

  order-service:
    image: ernestoacostacuba/order-service:0.0.1-SNAPSHOT
    container_name: order-service
    depends_on:
      polar-mysql:
        condition: service_healthy
    ports:
      - '8002:8002'
      - '9002:9002'
    environment:
      BPL_DEBUG_ENABLED: 'true' 
      BPL_DEBUG_PORT: 8002    
      BPL_JVM_THREAD_COUNT: 50
      POLAR_CATALOG_SERVICE_URI: http://catalog-service:9001
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      SPRING_R2DBC_URL: r2dbc:mysql://polar-mysql:3306/polardb_catalog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_FLYWAY_URL: jdbc:mysql://polar-mysql:3306/polardb_catalog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
    networks:
      - catalog-network

  sonarqube:
    image: sonarqube:8.9.8-community 
    expose:
      - 9000    
    depends_on:
      - sonardb
    ports:
      - "9127.0.0.1:9000:9000"   
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf:z
      - sonarqube_data:/opt/sonarqube/data:z
      - sonarqube_extensions:/opt/sonarqube/extensions:z
      - sonarqube_logs:/opt/sonarqube/logs:z
    environment:
      - sonar.jdbc.url=jdbc:postgresql://sonardb:5432/sonarqube
      - sonar.jdbc.username=sonarqube
      - sonar.jdbc.password=sonarpass
    networks:
      - catalog-network

 # AMQP Services
  polar-rabbitmq:
    image: rabbitmq:3.8-management
    container_name: polar-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

 # Backing Services

  polar-mysql:
    image: mysql:8.0
    container_name: polar-mysql
    restart: always
    ports:
      - '3306:3306'    
    expose:
      - '3306'
    volumes:
      - ./polar_mysql_db:/var/lib/mysql:z
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init-script.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h",  "localhost"]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_DATABASE: polardb_catalog      
    networks:
      - catalog-network

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - '9090:8080'
    networks:
      - catalog-network

  sonardb:
    image: postgres:13
    container_name: sonardb
    restart: unless-stopped
    volumes:
      - postgresql:/var/lib/postgresql:z
      - postgresql_data:/var/lib/postgresql/data:z
    environment:
      - POSTGRES_USER=sonarqube
      - POSTGRES_PASSWORD=sonarpass
      - POSTGRES_DB=sonarqube
    networks:
      - catalog-network

  polar-redis:
    image: redis:6.2
    container_name: polar-redis
    ports:
      - 6379:6379
    networks:
      - catalog-network

volumes:
  polar_mysql_db:
  sonarqube_conf:
  sonarqube_logs:
  sonarqube_data:
  sonarqube_extensions:
  postgresql:
  postgresql_data:

networks:
  catalog-network: